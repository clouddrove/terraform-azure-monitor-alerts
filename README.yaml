---
#
# This is the canonical configuration for the `README.md`
# Run `make readme` to rebuild the `README.md`
#


# Name of this project
name: Terraform AZURE MONITOR ALERTS

# License of this project
license: "APACHE"

# Canonical GitHub repo
github_repo: clouddrove/terraform-azure-monitor-alerts

# Badges to display
badges:
  - name: "Latest Release"
    image: "https://img.shields.io/github/release/clouddrove/terraform-azure-monitor-alerts.svg"
    url: "https://github.com/clouddrove/terraform-azure-monitor-alerts/releases/latest"
  - name: "tfsec"
    image: "https://github.com/clouddrove/terraform-azure-monitor-alerts/actions/workflows/tfsec.yml/badge.svg"
    url: "https://github.com/clouddrove/terraform-azure-monitor-alerts/actions/workflows/tfsec.yml"
  - name: "Licence"
    image: "https://img.shields.io/badge/License-APACHE-blue.svg"
    url: "LICENSE.md"

#  description of this project
description: |-
  Terraform module to create subnet resource on AZURE.
# extra content
include:
  - "terraform.md"

# How to use this project
# yamllint disable rule:line-length
usage: |-
  Here are some examples of how you can use this module in your inventory structure:
  ### action group
  ```hcl
    module "monitor-alerts" {
    source                         = "clouddrove/monitor-alerts/azure"
    version                        = "1.0.0"
    name                           = "app"
    environment                    = "test"
    label_order                    = ["name", "environment"]

    actionGroups = {
      "group1" = {
        actionGroupName      = "AlertEscalationGroup"
        actionGroupShortName = "alertesc"
        actionGroupRGName    = module.resource_group.resource_group_name
        actionGroupEnabled   = "true"
        actionGroupEmailReceiver = [
          {
            name                    = "example"
            email_address           = "myemail@example.com"
            use_common_alert_schema = "true"
          },
          {
            name                    = "test"
            email_address           = "myemail@example.com"
            use_common_alert_schema = "true"
          }
        ]
      }
    }
  }
  ```
  ### metric alert
  ```hcl
    module "monitor-alerts" {
    source                         = "clouddrove/monitor-alerts/azure"
    version                        = "1.0.0"
    name                           = "app"
    environment                    = "test"
    label_order                    = ["name", "environment"]

    actionGroups = {
      "group1" = {
        actionGroupName      = "AlertEscalationGroup"
        actionGroupShortName = "alertesc"
        actionGroupRGName    = module.resource_group.resource_group_name
        actionGroupEnabled   = "true"
        actionGroupEmailReceiver = [
          {
            name                    = "test"
            email_address           = "myemail@example.com"
            use_common_alert_schema = "true"
          },
          {
            name                    = "test"
            email_address           = "test@gmail.com"
            use_common_alert_schema = "true"
          }
        ]
      }
    }
  }
  ```

    ### Activity Log Alert
  ```hcl
  module "alerts" {
  depends_on = [data.azurerm_monitor_action_group.example, ]
  source     = "clouddrove/monitor-alerts/azure"

  name        = "app"
  environment = "test"
  label_order = ["name", "environment"]

  activity_log_alert = {
    "test1" = {
      alertname      = "nsg-write"
      alertrg        = module.resource_group.resource_group_name
      alertscopes    = [module.resource_group.resource_group_id]
      description    = "Administrative alerts for nsg"
      operation_name = "Microsoft.Network/networkSecurityGroups/write"
      actionGroupID  = data.azurerm_monitor_action_group.example.id
      category       = "Administrative"
    }
  }
  }


  ```